CREATE DATABASE IF NOT EXISTS SNEAKER;
USE SNEAKER;
SELECT * FROM CUSTOMERS;
SELECT * FROM PRODUCTS;
SELECT * FROM SALES;
SELECT * FROM SALES_REPO;
SELECT * FROM SUPPLIERS;
-- Objective 1: Analyzing Sales Performance


-- What is the total sales amount generated by each sales representative?
SELECT SR.SALESREPID, FIRSTNAME, LASTNAME, SUM(TOTALAMOUNT) AS TOTAL_AMOUNT
FROM SALES AS S RIGHT JOIN SALES_REPO AS SR
ON S.SALESREPID = SR.SALESREPID
GROUP BY SR.SALESREPID,  FIRSTNAME, LASTNAME
ORDER BY TOTAL_AMOUNT DESC;

-- How many products have been sold in each store location?
SELECT STORELOCATION, SUM(QUANTITY) AS PRODUCTS_SOLD 
FROM SALES
GROUP BY STORELOCATION
ORDER BY PRODUCTS_SOLD DESC; 

-- Which product category has the highest total sales amount?
SELECT P.CATEGORY, SUM(S.TOTALAMOUNT) AS TOTALSALES FROM PRODUCTS AS P
LEFT JOIN SALES AS S
ON P.PRODUCTID = S.PRODUCTID
GROUP BY P.CATEGORY
ORDER BY TOTALSALES DESC LIMIT 1; 

-- What is the average quantity of products sold per sale?
SELECT ROUND(AVG(QUANTITY),1) FROM SALES;

-- Which customer has made the highest number of purchases?
SELECT C.CUSTOMERID, C.FIRSTNAME, C.LASTNAME, SUM(S.QUANTITY) FROM CUSTOMERS AS C
INNER JOIN SALES AS S
ON C.CUSTOMERID = S.CUSTOMERID
GROUP BY C.CUSTOMERID, C.FIRSTNAME, C.LASTNAME
ORDER BY SUM(S.QUANTITY) DESC LIMIT 1;

-- What is the distribution of total sales amounts across different months?
SELECT EXTRACT(MONTH FROM date) AS month, SUM(TOTALAMOUNT) AS total_sales
FROM sales
GROUP BY month
ORDER BY month;

-- How does the sales performance of different regions compare?
SELECT UPPER(TRIM(SUBSTRING_INDEX(storelocation, ',', -1))) AS STATE, 
SUM(TOTALAMOUNT) AS PERFORMANCE FROM SALES
GROUP BY STATE
ORDER BY PERFORMANCE DESC;

-- What is the total sales amount generated for each product?
SELECT P.PRODUCTID, P.PRODUCTNAME, SUM(TOTALAMOUNT) AS TOTALSALES FROM PRODUCTS AS P
LEFT JOIN SALES AS S 
ON P.PRODUCTID = S.PRODUCTID
GROUP BY P.PRODUCTID, P.PRODUCTNAME
ORDER BY TOTALSALES DESC;

-- What is the average sales amount per transaction?
SELECT AVG(TOTALAMOUNT) FROM SALES;

-- How many sales transactions were made by each sales representative?
SELECT SR.SALESREPID, SR.FIRSTNAME, SR.LASTNAME, SUM(S.TOTALAMOUNT) AS TOALSALES
FROM SALES_REPO AS SR LEFT JOIN SALES AS S
ON SR.SALESREPID = S.SALESREPID
GROUP BY SR.SALESREPID, SR.FIRSTNAME, SR.LASTNAME
ORDER BY TOALSALES DESC;



-- Objective 2: Customer and Product Analysis


-- What is the average spending per customer?
SELECT C.CUSTOMERID, C.FIRSTNAME, C.LASTNAME, ROUND(AVG(S.TOTALAMOUNT),1) AS AVG_SALES
FROM CUSTOMERS AS C LEFT JOIN SALES AS S
ON  C.CUSTOMERID = S.CUSTOMERID
GROUP BY C.CUSTOMERID, C.FIRSTNAME, C.LASTNAME
ORDER BY AVG_SALES DESC;

-- Which product is the most frequently purchased by customers?
SELECT P.PRODUCTID, P.PRODUCTNAME, P.CATEGORY, SUM(S.QUANTITY) AS TOTALQUANTITY
FROM PRODUCTS AS P INNER JOIN SALES AS S
ON P.PRODUCTID = S.PRODUCTID
GROUP BY P.PRODUCTID, P.PRODUCTNAME, P.CATEGORY
ORDER BY TOTALQUANTITY DESC LIMIT 1;

-- How many unique customers made purchases in each city?
SELECT UPPER(TRIM(SUBSTRING_INDEX(storelocation, ',', 1))) AS city, COUNT(DISTINCT(CUSTOMERID))
FROM SALES
GROUP BY CITY
ORDER BY COUNT(DISTINCT(CUSTOMERID)) DESC;


-- What is the distribution of product categories purchased by customers?
SELECT p.category, COUNT(*) AS purchases
FROM sales s
JOIN products p ON s.productid = p.productid
GROUP BY p.category;

-- How many repeat customers are there in the dataset?
SELECT S.CUSTOMERID, COUNT(DISTINCT(S.CUSTOMERID)) AS REPEAT_CUSTOMERS
FROM SALES S
GROUP BY S.CUSTOMERID
HAVING REPEAT_CUSTOMERS > 1;

-- What is the average unit price of products purchased by customers?
SELECT P.PRODUCTNAME, AVG(P.UNITPRICE) AS AVG_UNITPRICE
FROM PRODUCTS AS P JOIN SALES AS S
ON P.PRODUCTID = S.PRODUCTID
GROUP BY P.PRODUCTNAME 
ORDER BY AVG_UNITPRICE DESC;

-- How does the spending behavior differ between customers from different states?
SELECT C.STATE, AVG(S.TOTALAMOUNT) AS AVG_SPENDING FROM CUSTOMERS AS C
JOIN SALES AS S ON C.CUSTOMERID = S.CUSTOMERID
GROUP BY C.STATE
ORDER BY AVG_SPENDING DESC;

-- Which supplier provides the most popular products?
SELECT SR.SALESREPID, SR.FIRSTNAME, SR.LASTNAME, SR.REGION, SUM(S.QUANTITY) AS PRODUCTS_SOLD
FROM SALES AS S JOIN SALES_REPO AS SR ON SR.SALESREPID = S.SALESREPID
GROUP BY SR.SALESREPID, SR.FIRSTNAME, SR.LASTNAME, SR.REGION
ORDER BY PRODUCTS_SOLD DESC LIMIT 1;

-- What is the most common product category purchased by customers?
SELECT P.CATEGORY, SUM(S.QUANTITY) AS PRODUCTS_SOLD
FROM PRODUCTS AS P JOIN SALES AS S ON P.PRODUCTID = S.PRODUCTID
GROUP BY P.CATEGORY
ORDER BY PRODUCTS_SOLD DESC LIMIT 1;

-- How many customers purchased more than one type of product?
SELECT COUNT(*) 
FROM
(SELECT C.CUSTOMERID, COUNT(DISTINCT(S.PRODUCTID)) 
FROM CUSTOMERS AS C JOIN SALES AS S ON C.CUSTOMERID = S.CUSTOMERID
GROUP BY C.CUSTOMERID
HAVING COUNT(DISTINCT(S.PRODUCTID)) > 1) AS T;


-- Objective 3: Supplier and Product Performance


-- What is the total sales amount for each supplier?
SELECT SU.SUPPLIERID, SU.SUPPLIERNAME, SUM(S.TOTALAMOUNT) AS TOTALSALES
FROM SUPPLIERS AS SU JOIN PRODUCTS AS P ON SU.SUPPLIERID = P.SUPPLIERID
JOIN SALES AS S ON P.PRODUCTID = S.PRODUCTID
GROUP BY SU.SUPPLIERID, SU.SUPPLIERNAME
ORDER BY TOTALSALES DESC;

-- Which supplier has the highest average unit price for their products?
SELECT T.SUPPLIERID, T.SUPPLIERNAME FROM
(SELECT S.SUPPLIERID, S.SUPPLIERNAME, 
ROW_NUMBER() OVER(ORDER BY AVG(P.UNITPRICE) DESC) AS AVG_UNITPRICE
FROM SUPPLIERS AS S JOIN PRODUCTS AS P ON S.SUPPLIERID = P.SUPPLIERID
GROUP BY S.SUPPLIERID, S.SUPPLIERNAME) AS T
WHERE T.AVG_UNITPRICE =1;

-- How many different products are provided by each supplier?
SELECT S.SUPPLIERID, S.SUPPLIERNAME, COUNT(DISTINCT(P.PRODUCTID)) AS DIFF_PRODUCTS
FROM SUPPLIERS AS S LEFT JOIN PRODUCTS AS P ON S.SUPPLIERID = P.SUPPLIERID
GROUP BY S.SUPPLIERID, S.SUPPLIERNAME
ORDER BY DIFF_PRODUCTS DESC;

-- What is the average total sales amount for products supplied by each supplier?
SELECT SU.SUPPLIERID, SU.SUPPLIERNAME, ROUND(AVG(S.TOTALAMOUNT), 2)
FROM SUPPLIERS AS SU LEFT JOIN PRODUCTS AS P ON SU.SUPPLIERID = P.SUPPLIERID
LEFT JOIN SALES AS S ON P.PRODUCTID = S.PRODUCTID
GROUP BY SU.SUPPLIERID, SU.SUPPLIERNAME
ORDER BY AVG(S.TOTALAMOUNT) DESC;

-- Which supplier's products have the highest total sales quantity?
SELECT SU.SUPPLIERID, SU.SUPPLIERNAME, SUM(S.QUANTITY) AS TOTAL_QUANTITY
FROM SUPPLIERS AS SU JOIN PRODUCTS AS P ON SU.SUPPLIERID = P.SUPPLIERID
JOIN SALES AS S ON P.PRODUCTID = S.PRODUCTID
GROUP BY SU.SUPPLIERID, SU.SUPPLIERNAME
ORDER BY TOTAL_QUANTITY DESC LIMIT 1;

-- What is the most common category of products supplied by each supplier?
SELECT T.SUPPLIERID, T.CATEGORY FROM
(SELECT SUPPLIERID, CATEGORY, 
ROW_NUMBER() OVER(PARTITION BY SUPPLIERID ORDER BY COUNT(CATEGORY) DESC) AS X
FROM PRODUCTS
GROUP BY SUPPLIERID, CATEGORY) AS T
WHERE T.X =1;

-- How does the performance of products from different suppliers compare?
SELECT sup.suppliername, SUM(s.TOTALAMOUNT) AS total_sales
FROM sales s
JOIN products p ON s.productid = p.productid
JOIN suppliers sup ON p.supplierid = sup.supplierid
GROUP BY sup.suppliername
ORDER BY total_sales DESC;

-- What is the distribution of product categories provided by each supplier?
SELECT S.SUPPLIERID,S.SUPPLIERNAME, P.CATEGORY, ROW_NUMBER() OVER(PARTITION BY S.SUPPLIERID) 
FROM PRODUCTS AS P JOIN SUPPLIERS AS S ON P.SUPPLIERID = S.SUPPLIERID
GROUP BY S.SUPPLIERID, S.SUPPLIERNAME, P.CATEGORY;

-- How many products from each supplier are in the top 10 best-selling products?
SELECT sup.suppliername, COUNT(DISTINCT p.productid) AS top_10_best_selling
FROM sales s
JOIN products p ON s.productid = p.productid
JOIN suppliers sup ON p.supplierid = sup.supplierid
GROUP BY sup.suppliername
HAVING COUNT(DISTINCT p.productid) <= 10;

-- What is the average sales amount per product category for each supplier?
SELECT sup.suppliername, p.category, AVG(s.totalamount) AS avg_sales
FROM sales s
JOIN products p ON s.productid = p.productid
JOIN suppliers sup ON p.supplierid = sup.supplierid
GROUP BY sup.suppliername, p.category;